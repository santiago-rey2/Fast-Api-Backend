from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker, DeclarativeBase
from src.core.config import settings

engine = create_engine(
    settings.sync_dsn, 
    echo=settings.sql_echo,
    pool_pre_ping=True, 
    pool_recycle=3600, 
    future=True
)

class Base(DeclarativeBase): 
    pass

SessionLocal = sessionmaker(
    bind=engine, 
    autoflush=False, 
    autocommit=False, 
    future=True
)

def init_db() -> None:
    """Initialize database tables and load default data"""
    # Import all models to register them with Base.metadata
    from src.entities import (
        plato, 
        vino, 
        categoria_plato, 
        categoria_vino,
        alergeno,
        bodega,
        denominacion_origen,
        enologo,
        uva,
        user
    )
    
    # Create all tables
    Base.metadata.create_all(bind=engine)
    
    # Load default data
    _load_default_data()

def _load_default_data() -> None:
    """Load expanded default data into the database"""
    with engine.connect() as conn:
        # Configurar modo SQL para permitir ID 0
        conn.execute(text("SET SESSION sql_mode = 'NO_AUTO_VALUE_ON_ZERO'"))
        
        # Verificar si ya existen datos (para evitar duplicados)
        result = conn.execute(text("SELECT COUNT(*) FROM categoria_platos"))
        if result.scalar() > 0:
            print("‚ÑπÔ∏è  Los datos por defecto ya est√°n cargados")
            return
        
        print("üå± Cargando datos por defecto expandidos...")
        
        # === USUARIO ADMINISTRADOR ===
        from src.auth.service import AuthService
        hashed_password = AuthService.get_password_hash("admin123")
        conn.execute(text("""
            INSERT IGNORE INTO users (username, email, hashed_password, is_active, is_admin) VALUES
            ('admin', 'admin@restaurant.com', :password, true, true)
        """), {"password": hashed_password})
        
        # === CATEGOR√çAS DE PLATOS EXPANDIDAS ===
        conn.execute(text("""
            INSERT IGNORE INTO categoria_platos (id, nombre) VALUES
            (0, 'Sin categor√≠a'),
            (1, 'Entrantes'),
            (2, 'Principales'), 
            (3, 'Postres'),
            (4, 'Ensaladas'),
            (5, 'Tapas'),
            (6, 'Arroces'),
            (7, 'Carnes'),
            (8, 'Pescados'),
            (9, 'Mariscos'),
            (10, 'Sopas'),
            (11, 'Verduras'),
            (12, 'Pasta'),
            (13, 'Quesos'),
            (14, 'Aperitivos')
        """))
        
        # === AL√âRGENOS SEG√öN LEY ESPA√ëOLA ===
        conn.execute(text("""
            INSERT IGNORE INTO alergenos (id, nombre) VALUES
            (0, 'Sin al√©rgenos'),
            (1, 'Gluten'),
            (2, 'Crust√°ceos'),
            (3, 'Huevos'),
            (4, 'Pescado'),
            (5, 'Cacahuetes'),
            (6, 'Soja'),
            (7, 'L√°cteos'),
            (8, 'Frutos secos'),
            (9, 'Apio'),
            (10, 'Mostaza'),
            (11, 'S√©samo'),
            (12, 'Sulfitos'),
            (13, 'Altramuces'),
            (14, 'Moluscos')
        """))
        
        # === CATEGOR√çAS DE VINOS EXPANDIDAS ===
        conn.execute(text("""
            INSERT IGNORE INTO categoria_vinos (id, nombre) VALUES
            (0, 'Sin categor√≠a'),
            (1, 'Tinto joven'),
            (2, 'Tinto crianza'),
            (3, 'Tinto reserva'),
            (4, 'Tinto gran reserva'),
            (5, 'Blanco joven'),
            (6, 'Blanco crianza'),
            (7, 'Blanco reserva'),
            (8, 'Rosado'),
            (9, 'Espumoso'),
            (10, 'Dulce'),
            (11, 'Generoso'),
            (12, 'Licoroso'),
            (13, 'Fortificado')
        """))
        
        # === DENOMINACIONES DE ORIGEN ESPA√ëOLAS ===
        conn.execute(text("""
            INSERT IGNORE INTO denominaciones_origen (id, nombre, region) VALUES
            (0, 'Sin D.O.', 'Sin especificar'),
            
            -- Castilla y Le√≥n
            (1, 'D.O. Ribera del Duero', 'Castilla y Le√≥n'),
            (2, 'D.O. Rueda', 'Castilla y Le√≥n'),
            (3, 'D.O. Toro', 'Castilla y Le√≥n'),
            (4, 'D.O. Cigales', 'Castilla y Le√≥n'),
            (5, 'D.O. Bierzo', 'Castilla y Le√≥n'),
            
            -- La Rioja
            (6, 'D.O. Rioja', 'La Rioja'),
            
            -- Catalu√±a
            (7, 'D.O. Pened√®s', 'Catalu√±a'),
            (8, 'D.O. Priorat', 'Catalu√±a'),
            (9, 'D.O. Montsant', 'Catalu√±a'),
            (10, 'D.O. Cava', 'Catalu√±a'),
            
            -- Galicia
            (11, 'D.O. R√≠as Baixas', 'Galicia'),
            (12, 'D.O. Ribeiro', 'Galicia'),
            (13, 'D.O. Valdeorras', 'Galicia'),
            
            -- Andaluc√≠a
            (14, 'D.O. Jerez', 'Andaluc√≠a'),
            (15, 'D.O. Montilla-Moriles', 'Andaluc√≠a'),
            (16, 'D.O. M√°laga', 'Andaluc√≠a'),
            
            -- Valencia
            (17, 'D.O. Valencia', 'Valencia'),
            (18, 'D.O. Utiel-Requena', 'Valencia'),
            (19, 'D.O. Alicante', 'Valencia'),
            
            -- Arag√≥n
            (20, 'D.O. Somontano', 'Arag√≥n'),
            (21, 'D.O. Campo de Borja', 'Arag√≥n'),
            (22, 'D.O. Cari√±ena', 'Arag√≥n'),
            
            -- Navarra
            (23, 'D.O. Navarra', 'Navarra'),
            
            -- Pa√≠s Vasco
            (24, 'D.O. Txakoli de Getaria', 'Pa√≠s Vasco'),
            
            -- Murcia
            (25, 'D.O. Jumilla', 'Murcia'),
            (26, 'D.O. Yecla', 'Murcia'),
            
            -- Castilla-La Mancha
            (27, 'D.O. Valdepe√±as', 'Castilla-La Mancha'),
            (28, 'D.O. La Mancha', 'Castilla-La Mancha'),
            
            -- Extremadura
            (29, 'D.O. Ribera del Guadiana', 'Extremadura'),
            
            -- Canarias
            (30, 'D.O. Tacoronte-Acentejo', 'Canarias'),
            
            -- Otros
            (31, 'V.T. Castilla', 'Vino de la Tierra'),
            (32, 'V.T. Castilla y Le√≥n', 'Vino de la Tierra')
        """))
        
        # === VARIEDADES DE UVA ESPA√ëOLAS ===
        conn.execute(text("""
            INSERT IGNORE INTO uvas (id, nombre, tipo) VALUES
            (0, 'Sin uva', 'Sin tipo'),
            
            -- Uvas tintas espa√±olas
            (1, 'Tempranillo', 'Tinta'),
            (2, 'Garnacha', 'Tinta'),
            (3, 'Monastrell', 'Tinta'),
            (4, 'Bobal', 'Tinta'),
            (5, 'Menc√≠a', 'Tinta'),
            (6, 'Graciano', 'Tinta'),
            (7, 'Mazuelo', 'Tinta'),
            (8, 'Cari√±ena', 'Tinta'),
            (9, 'Tinta de Toro', 'Tinta'),
            (10, 'Prieto Picudo', 'Tinta'),
            
            -- Uvas tintas internacionales
            (11, 'Cabernet Sauvignon', 'Tinta'),
            (12, 'Merlot', 'Tinta'),
            (13, 'Syrah', 'Tinta'),
            (14, 'Pinot Noir', 'Tinta'),
            (15, 'Cabernet Franc', 'Tinta'),
            
            -- Uvas blancas espa√±olas
            (16, 'Albari√±o', 'Blanca'),
            (17, 'Verdejo', 'Blanca'),
            (18, 'Godello', 'Blanca'),
            (19, 'Viura', 'Blanca'),
            (20, 'Palomino', 'Blanca'),
            (21, 'Pedro Xim√©nez', 'Blanca'),
            (22, 'Air√©n', 'Blanca'),
            (23, 'Macabeo', 'Blanca'),
            (24, 'Xarel¬∑lo', 'Blanca'),
            (25, 'Parellada', 'Blanca'),
            (26, 'Moscatel', 'Blanca'),
            (27, 'Malvas√≠a', 'Blanca'),
            (28, 'Treixadura', 'Blanca'),
            (29, 'Loureiro', 'Blanca'),
            (30, 'Cai√±o', 'Blanca'),
            
            -- Uvas blancas internacionales
            (31, 'Chardonnay', 'Blanca'),
            (32, 'Sauvignon Blanc', 'Blanca'),
            (33, 'Riesling', 'Blanca'),
            (34, 'Gew√ºrztraminer', 'Blanca'),
            (35, 'Pinot Grigio', 'Blanca')
        """))
        
        # === BODEGAS BASE ===
        conn.execute(text("""
            INSERT IGNORE INTO bodegas (id, nombre, region) VALUES
            (0, 'Sin bodega', 'Sin regi√≥n'),
            (1, 'Marqu√©s de Riscal', 'Rioja'),
            (2, 'Vega Sicilia', 'Ribera del Duero'),
            (3, 'Torres', 'Pened√®s'),
            (4, 'Mart√≠n C√≥dax', 'R√≠as Baixas'),
            (5, 'Gonz√°lez Byass', 'Jerez'),
            (6, 'L√≥pez de Heredia', 'Rioja'),
            (7, 'Muga', 'Rioja'),
            (8, 'CVNE', 'Rioja'),
            (9, 'Artadi', 'Rioja'),
            (10, 'Pingus', 'Ribera del Duero')
        """))
        
        # === EN√ìLOGOS BASE ===
        conn.execute(text("""
            INSERT IGNORE INTO enologos (id, nombre) VALUES
            (0, 'Sin en√≥logo'),
            (1, 'Francisco Hurtado de Am√©zaga'),
            (2, 'Miguel Torres Maczassek'),
            (3, 'Pablo √Ålvarez'),
            (4, 'Mariano Garc√≠a'),
            (5, 'Telmo Rodr√≠guez'),
            (6, 'Mar√≠a Vargas'),
            (7, 'Rafael Cambra'),
            (8, 'Alvaro Palacios'),
            (9, 'Jorge Ord√≥√±ez'),
            (10, 'Ra√∫l P√©rez')
        """))
        
        conn.commit()
        
        print("‚úÖ Datos por defecto expandidos cargados correctamente")
        print("üìä Estructura completa disponible para la aplicaci√≥n")
        print("üë§ Usuario administrador creado:")
        print("   - Username: admin")
        print("   - Password: admin123")
        print("   - Email: admin@restaurant.com")

def get_db():
    """Dependency to get database session"""
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()